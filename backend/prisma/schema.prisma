// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  password     String
  email        String    @unique
  admin        Boolean   @default(false)
  refreshToken String?   @unique
  emailToken   String?   @unique
  lists        List[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model List {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  name        String
  description String?
  entities    ListEntity[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
}

model ListEntity {
  id        Int          @id @default(autoincrement())
  list      List         @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  listId    Int
  pokemon   Pokemon?     @relation(fields: [pokemonId], references: [id])
  pokemonId Int?
  form      PokemonForm? @relation(fields: [formId], references: [id])
  formId    Int?
  gender    Boolean?
  shiny     Boolean?
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
}

model Pokemon {
  id                   Int           @id @default(autoincrement())
  name                 String
  formName             String?
  formTypes            FormType[]
  species              String
  gender               Boolean
  nationalIndex        Int           @unique
  firstType            PokemonType   @relation(fields: [firstTypeId], references: [id], name: "first")
  firstTypeId          Int
  secondType           PokemonType?  @relation(fields: [secondTypeId], references: [id], name: "second")
  secondTypeId         Int?
  generation           Int
  health               Int
  speed                Int
  attack               Int
  defense              Int
  specialAttack        Int
  specialDefense       Int
  femaleHealth         Int?
  femaleSpeed          Int?
  femaleAttack         Int?
  femaleDefense        Int?
  femaleSpecialAttack  Int?
  femaleSpecialDefense Int?
  artworkMale          String?
  artworkFemale        String?
  artworkMaleShiny     String?
  artworkFemaleShiny   String?
  homeMale             String?
  homeFemale           String?
  homeMaleShiny        String?
  homeFemaleShiny      String?
  previousEvolutionId  Int?
  previousEvolution    Pokemon?      @relation("Evolution", fields: [previousEvolutionId], references: [id])
  nextEvolution        Pokemon[]     @relation("Evolution")
  forms                PokemonForm[]
  games                Game[]
  listEntities         ListEntity[]
  createdAt            DateTime      @default(now())
  updatedAt            DateTime?     @updatedAt
}

model PokemonForm {
  id                 Int          @id @default(autoincrement())
  pokemon            Pokemon      @relation(fields: [pokemonId], references: [id])
  pokemonId          Int
  name               String
  formTypes          FormType[]
  firstType          PokemonType? @relation(fields: [firstTypeId], references: [id], name: "formFirst")
  firstTypeId        Int
  secondType         PokemonType? @relation(fields: [secondTypeId], references: [id], name: "formSecond")
  secondTypeId       Int?
  generation         Int?
  health             Int?
  speed              Int?
  attack             Int?
  defense            Int?
  specialAttack      Int?
  specialDefense     Int?
  artworkMale        String?
  artworkFemale      String?
  artworkMaleShiny   String?
  artworkFemaleShiny String?
  homeMale           String?
  homeFemale         String?
  homeMaleShiny      String?
  homeFemaleShiny    String?
  games              Game[]
  listEntities       ListEntity[]
  createdAt          DateTime     @default(now())
  updatedAt          DateTime?    @updatedAt
}

model Game {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  pokemon   Pokemon[]
  forms     PokemonForm[]
  createdAt DateTime      @default(now())
  updatedAt DateTime?     @updatedAt
}

model FormType {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  forms     PokemonForm[]
  pokemons  Pokemon[]
  createdAt DateTime      @default(now())
  updatedAt DateTime?     @updatedAt
}

model PokemonType {
  id                Int           @id @default(autoincrement())
  name              String        @unique
  doubleTo          String?
  doubleFrom        String?
  halfTo            String?
  halfFrom          String?
  immuneTo          String?
  immuneFrom        String?
  firstSlotPokemon  Pokemon[]     @relation("first")
  secondSlotPokemon Pokemon[]     @relation("second")
  firstSlotForm     PokemonForm[] @relation("formFirst")
  secondSlotForm    PokemonForm[] @relation("formSecond")
  createdAt         DateTime      @default(now())
  updatedAt         DateTime?     @updatedAt
}

enum FormTypeName {
  Alola
  Paldea
  Hisui
  Galar
  Mega
  Gigantamax
  Weather
  Primal
  Deoxys
  Cloak
}
