// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  password     String
  email        String    @unique
  admin        Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  refreshToken String?   @unique
  lists        List[]
}

model List {
  id          Int            @id @default(autoincrement())
  user        User           @relation(fields: [userId], references: [id])
  userId      String
  name        String
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime?      @updatedAt
  entities    listEntities[]
}

model listEntities {
  id            Int           @id @default(autoincrement())
  list          List          @relation(fields: [listId], references: [id])
  listId        Int
  pokemon       Pokemon?      @relation(fields: [pokemonId], references: [id])
  pokemonId     Int?
  forms         PokemonForm[]
  pokemonGender Boolean?
  formGender    Boolean?
}

model Pokemon {
  id                 Int            @id @default(autoincrement())
  name               String
  species            String
  gender             Boolean
  nationalNumber     Int            @unique
  type               PokemonType[]
  generation         Int
  health             Int
  speed              Int
  attack             Int
  defence            Int
  specialAttack      Int
  specialDefence     Int
  artworkMale        String?
  artworkFemale      String?
  artworkMaleShiny   String?
  artworkFemaleShiny String?
  homeSprite         String?
  homeSpriteShiny    String?
  nextEvolution      Pokemon[]      @relation("Evolutions")
  previousEvolution  Pokemon[]      @relation("Evolutions")
  forms              PokemonForm[]
  games              Game[]
  createdAt          DateTime       @default(now())
  updatedAt          DateTime?      @updatedAt
  lists              listEntities[]
}

model PokemonForm {
  id                 Int            @id @default(autoincrement())
  pokemon            Pokemon        @relation(fields: [pokemonId], references: [id])
  pokemonId          Int
  name               String
  formType           FormType       @relation(fields: [formTypeId], references: [id])
  formTypeId         Int            @unique
  species            String?
  gender             Boolean?
  type               PokemonType[]
  generation         Int?
  health             Int?
  speed              Int?
  attack             Int?
  defence            Int?
  specialAttack      Int?
  specialDefence     Int?
  artworkMale        String?
  artworkFemale      String?
  artworkMaleShiny   String?
  artworkFemaleShiny String?
  homeSprite         String?
  homeSpriteShiny    String?
  games              Game[]
  createdAt          DateTime       @default(now())
  updatedAt          DateTime?      @updatedAt
  lists              listEntities[]
}

model Game {
  id      Int           @id @default(autoincrement())
  name    String
  pokemon Pokemon[]
  forms   PokemonForm[]
}

model FormType {
  id    Int           @id @default(autoincrement())
  name  String
  forms PokemonForm[]
}

model PokemonType {
  id       Int           @id @default(autoincrement())
  name     String
  weakness PokemonType[] @relation("strength_weakness")
  strength PokemonType[] @relation("strength_weakness")
  pokemon  Pokemon[]
  forms    PokemonForm[]
}
